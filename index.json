[{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred.html","title":"FSharp.Data.Fred","content":"QueryParameters \nFred \nSearch \nSeries","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters.html","title":"QueryParameters","content":"QueryParameters \n Contains types for specifying search query parameters.  \nQueryParameters.AggMethod \nAggMethod \nQueryParameters.Frequency \nFrequency \nQueryParameters.OrderByTags \nOrderByTags \nQueryParameters.SearchOrder \nSearchOrder \nQueryParameters.SearchType \nSearchType \nQueryParameters.SortOrder \nSortOrder \nQueryParameters.Units \nUnits","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html","title":"AggMethod","content":"AggMethod \n\n   A key that indicates the aggregation method used for frequency aggregation. \n   This parameter has no affect if the frequency parameter is not set.   \n    \nAggMethod.Average \nAverage \nAggMethod.Sum \nSum \nAggMethod.EndOfPeriod \nEndOfPeriod","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html#Average","title":"AggMethod.Average","content":"AggMethod.Average \nAverage \n Computes the average to get the observation values for the desired frequency.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html#Sum","title":"AggMethod.Sum","content":"AggMethod.Sum \nSum \n Computes the sum to get the observation values for the desired frequency.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html#EndOfPeriod","title":"AggMethod.EndOfPeriod","content":"AggMethod.EndOfPeriod \nEndOfPeriod \n Set the end of period value to get the observation values for the desired frequency. ","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html","title":"Frequency","content":"Frequency \n\n   The FRED frequency aggregation feature converts higher frequency data series into lower frequency \n   data series (e.g. converts a monthly data series into an annual data series). \n   In FRED, the highest frequency data is daily, and the lowest frequency data is annual.  \n  \nFrequency.Daily \nDaily \nFrequency.Weekly \nWeekly \nFrequency.Biweekly \nBiweekly \nFrequency.Monthly \nMonthly \nFrequency.Quarterly \nQuarterly \nFrequency.Semiannual \nSemiannual \nFrequency.Annual \nAnnual \nFrequency.WeeklyEndingFriday \nWeeklyEndingFriday \nFrequency.WeeklyEndingThursday \nWeeklyEndingThursday \nFrequency.WeeklyEndingWednesday \nWeeklyEndingWednesday \nFrequency.WeeklyEndingTuesday \nWeeklyEndingTuesday \nFrequency.WeeklyEndingMonday \nWeeklyEndingMonday \nFrequency.WeeklyEndingSunday \nWeeklyEndingSunday \nFrequency.WeeklyEndingSaturday \nWeeklyEndingSaturday \nFrequency.BiweeklyEndingWednesday \nBiweeklyEndingWednesday \nFrequency.BiweeklyEndingMonday \nBiweeklyEndingMonday \nFrequency.Default \nDefault","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Daily","title":"Frequency.Daily","content":"Frequency.Daily \nDaily \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Weekly","title":"Frequency.Weekly","content":"Frequency.Weekly \nWeekly \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Biweekly","title":"Frequency.Biweekly","content":"Frequency.Biweekly \nBiweekly \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Monthly","title":"Frequency.Monthly","content":"Frequency.Monthly \nMonthly \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Quarterly","title":"Frequency.Quarterly","content":"Frequency.Quarterly \nQuarterly \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Semiannual","title":"Frequency.Semiannual","content":"Frequency.Semiannual \nSemiannual \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Annual","title":"Frequency.Annual","content":"Frequency.Annual \nAnnual \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingFriday","title":"Frequency.WeeklyEndingFriday","content":"Frequency.WeeklyEndingFriday \nWeeklyEndingFriday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingThursday","title":"Frequency.WeeklyEndingThursday","content":"Frequency.WeeklyEndingThursday \nWeeklyEndingThursday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingWednesday","title":"Frequency.WeeklyEndingWednesday","content":"Frequency.WeeklyEndingWednesday \nWeeklyEndingWednesday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingTuesday","title":"Frequency.WeeklyEndingTuesday","content":"Frequency.WeeklyEndingTuesday \nWeeklyEndingTuesday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingMonday","title":"Frequency.WeeklyEndingMonday","content":"Frequency.WeeklyEndingMonday \nWeeklyEndingMonday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingSunday","title":"Frequency.WeeklyEndingSunday","content":"Frequency.WeeklyEndingSunday \nWeeklyEndingSunday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingSaturday","title":"Frequency.WeeklyEndingSaturday","content":"Frequency.WeeklyEndingSaturday \nWeeklyEndingSaturday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#BiweeklyEndingWednesday","title":"Frequency.BiweeklyEndingWednesday","content":"Frequency.BiweeklyEndingWednesday \nBiweeklyEndingWednesday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#BiweeklyEndingMonday","title":"Frequency.BiweeklyEndingMonday","content":"Frequency.BiweeklyEndingMonday \nBiweeklyEndingMonday \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Default","title":"Frequency.Default","content":"Frequency.Default \nDefault \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html","title":"OrderByTags","content":"OrderByTags \n\n   Order Tags by values of the specified attribute.\n    \nOrderByTags.SeriesCount \nSeriesCount \nOrderByTags.Popularity \nPopularity \nOrderByTags.Created \nCreated \nOrderByTags.Name \nName \nOrderByTags.GroupId \nGroupId","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#SeriesCount","title":"OrderByTags.SeriesCount","content":"OrderByTags.SeriesCount \nSeriesCount \n Order by number of series per tag.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#Popularity","title":"OrderByTags.Popularity","content":"OrderByTags.Popularity \nPopularity \n Order by tag popularity","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#Created","title":"OrderByTags.Created","content":"OrderByTags.Created \nCreated \n Order by created date","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#Name","title":"OrderByTags.Name","content":"OrderByTags.Name \nName \n Order by tag name","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#GroupId","title":"OrderByTags.GroupId","content":"OrderByTags.GroupId \nGroupId \n Order by group id","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html","title":"SearchOrder","content":"SearchOrder \n\n    Order results by values of the specified attribute. \n    \nSearchOrder.SearchRank \nSearchRank \nSearchOrder.SeriesIdOrder \nSeriesIdOrder \nSearchOrder.Title \nTitle \nSearchOrder.Units \nUnits \nSearchOrder.Frequency \nFrequency \nSearchOrder.SeasonalAdjustment \nSeasonalAdjustment \nSearchOrder.RealTimeStart \nRealTimeStart \nSearchOrder.RealTimeEnd \nRealTimeEnd \nSearchOrder.LastUpdated \nLastUpdated \nSearchOrder.ObservationStart \nObservationStart \nSearchOrder.ObservationEnd \nObservationEnd \nSearchOrder.Popularity \nPopularity \nSearchOrder.GroupPopularity \nGroupPopularity","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#SearchRank","title":"SearchOrder.SearchRank","content":"SearchOrder.SearchRank \nSearchRank \n Order search by rank. ","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#SeriesIdOrder","title":"SearchOrder.SeriesIdOrder","content":"SearchOrder.SeriesIdOrder \nSeriesIdOrder \n Order search by id numbering order","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Title","title":"SearchOrder.Title","content":"SearchOrder.Title \nTitle \n Order search by title","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Units","title":"SearchOrder.Units","content":"SearchOrder.Units \nUnits \n Order search by units","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Frequency","title":"SearchOrder.Frequency","content":"SearchOrder.Frequency \nFrequency \n Order search by frequency","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#SeasonalAdjustment","title":"SearchOrder.SeasonalAdjustment","content":"SearchOrder.SeasonalAdjustment \nSeasonalAdjustment \n Order search by seasonal adjustment","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#RealTimeStart","title":"SearchOrder.RealTimeStart","content":"SearchOrder.RealTimeStart \nRealTimeStart \n Order search by most recent real time start","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#RealTimeEnd","title":"SearchOrder.RealTimeEnd","content":"SearchOrder.RealTimeEnd \nRealTimeEnd \n Order search by most recent real time end","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#LastUpdated","title":"SearchOrder.LastUpdated","content":"SearchOrder.LastUpdated \nLastUpdated \n Order search by most recently updated series","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#ObservationStart","title":"SearchOrder.ObservationStart","content":"SearchOrder.ObservationStart \nObservationStart \n Order search by most recent observation start date","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#ObservationEnd","title":"SearchOrder.ObservationEnd","content":"SearchOrder.ObservationEnd \nObservationEnd \n Order search by most recent observation end date","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Popularity","title":"SearchOrder.Popularity","content":"SearchOrder.Popularity \nPopularity \n Order search by popularity","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#GroupPopularity","title":"SearchOrder.GroupPopularity","content":"SearchOrder.GroupPopularity \nGroupPopularity \n Order search by group popularity","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchtype.html","title":"SearchType","content":"SearchType \n\n   Represents the type of search to perform.\n    \nSearchType.FullText \nFullText \nSearchType.SeriesId \nSeriesId","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchtype.html#FullText","title":"SearchType.FullText","content":"SearchType.FullText \nFullText \n\n Searches series attributes title, units, frequency, and tags by parsing words into stems.\n This makes it possible for searches like \u0027Industry\u0027 to match series containing related words such as \u0027Industries\u0027. \n Of course, you can search for multiple words like \u0027money\u0027 and \u0027stock\u0027. Remember to url encode spaces (e.g. \u003Ccode\u003Emoney%20stock\u003C/code\u003E).\n ","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchtype.html#SeriesId","title":"SearchType.SeriesId","content":"SearchType.SeriesId \nSeriesId \n Performs a substring search on series IDs. Searching for \u0027ex\u0027 will find series containing \u0027ex\u0027 anywhere in a series ID.\n \u0027*\u0027 can be used to anchor searches and match 0 or more of any character. Searching for \u0027ex*\u0027 will find series containing \u0027ex\u0027 at the beginning of a series ID.\n Searching for \u0027*ex\u0027 will find series containing \u0027ex\u0027 at the end of a series ID. It\u0027s also possible to put an \u0027*\u0027 in the middle of a string.\n \u0027m*sl\u0027 finds any series starting with \u0027m\u0027 and ending with \u0027sl\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-sortorder.html","title":"SortOrder","content":"SortOrder \n\n    Sort results is ascending or descending observation date order.\n    \nSortOrder.Ascending \nAscending \nSortOrder.Descending \nDescending","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-sortorder.html#Ascending","title":"SortOrder.Ascending","content":"SortOrder.Ascending \nAscending \n Sort results in ascending order.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-sortorder.html#Descending","title":"SortOrder.Descending","content":"SortOrder.Descending \nDescending \n Sort results in descending order.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html","title":"Units","content":"Units \n\n   A key that indicates a data value transformation.\n    \nUnits.Levels \nLevels \nUnits.Change \nChange \nUnits.ChangeFromYearAgo \nChangeFromYearAgo \nUnits.PercentChange \nPercentChange \nUnits.PercentChangeFromYearAgo \nPercentChangeFromYearAgo \nUnits.CompoundedAnnualRateofChange \nCompoundedAnnualRateofChange \nUnits.ContinuouslyCompoundedRateofChange \nContinuouslyCompoundedRateofChange \nUnits.ContinuouslyCompoundedAnnualRateofChange \nContinuouslyCompoundedAnnualRateofChange \nUnits.NaturalLog \nNaturalLog","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#Levels","title":"Units.Levels","content":"Units.Levels \nLevels \n Observation(t), default.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#Change","title":"Units.Change","content":"Units.Change \nChange \n Observation(t) - Observation(t-1)","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#ChangeFromYearAgo","title":"Units.ChangeFromYearAgo","content":"Units.ChangeFromYearAgo \nChangeFromYearAgo \n Observation(t) - Observation(t-#ObsPerYear)","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#PercentChange","title":"Units.PercentChange","content":"Units.PercentChange \nPercentChange \n ((Observation(t)/Observation(t-1)) - 1) * 100","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#PercentChangeFromYearAgo","title":"Units.PercentChangeFromYearAgo","content":"Units.PercentChangeFromYearAgo \nPercentChangeFromYearAgo \n ((Observation(t)/Observation(t-#ObsPerYear)) - 1) * 100","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#CompoundedAnnualRateofChange","title":"Units.CompoundedAnnualRateofChange","content":"Units.CompoundedAnnualRateofChange \nCompoundedAnnualRateofChange \n (((Observation(t)/Observation(t-1)) ** (#ObsPerYear)) - 1) * 100","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#ContinuouslyCompoundedRateofChange","title":"Units.ContinuouslyCompoundedRateofChange","content":"Units.ContinuouslyCompoundedRateofChange \nContinuouslyCompoundedRateofChange \n (ln(Observation(t)) - ln(Observation(t-1))) * 100","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#ContinuouslyCompoundedAnnualRateofChange","title":"Units.ContinuouslyCompoundedAnnualRateofChange","content":"Units.ContinuouslyCompoundedAnnualRateofChange \nContinuouslyCompoundedAnnualRateofChange \n ((ln(Observation(t)) - ln(Observation(t-1))) * 100) * #ObsPerYear","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#NaturalLog","title":"Units.NaturalLog","content":"Units.NaturalLog \nNaturalLog \n ln(Observation(t))","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html","title":"Fred","content":"Fred \n\n   Represents a type for accessing the Fred API.\n   You must provide an api key.\n   \nFred.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFred.Key \nKey \nFred.Series \nSeries \nFred.loadKey \nloadKey","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#\u0060\u0060.ctor\u0060\u0060","title":"Fred.\u0060\u0060.ctor\u0060\u0060","content":"Fred.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#Key","title":"Fred.Key","content":"Fred.Key \nKey \n Fred API key","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#Series","title":"Fred.Series","content":"Fred.Series \nSeries \n Represents a Fred data series. ","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#loadKey","title":"Fred.loadKey","content":"Fred.loadKey \nloadKey \n Loads a Fred api key from a json file.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html","title":"Search","content":"Search \n \nSearch.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSearch.Summary \nSummary \nSearch.Results \nResults","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html#\u0060\u0060.ctor\u0060\u0060","title":"Search.\u0060\u0060.ctor\u0060\u0060","content":"Search.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html#Summary","title":"Search.Summary","content":"Search.Summary \nSummary \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html#Results","title":"Search.Results","content":"Search.Results \nResults \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html","title":"Series","content":"Series \n A data series. \nSeries.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSeries.Categories \nCategories \nSeries.Info \nInfo \nSeries.Observations \nObservations \nSeries.Release \nRelease \nSeries.Search \nSearch \nSeries.Tags \nTags","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#\u0060\u0060.ctor\u0060\u0060","title":"Series.\u0060\u0060.ctor\u0060\u0060","content":"Series.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Categories","title":"Series.Categories","content":"Series.Categories \nCategories \n Get the categories for an economic data series.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Info","title":"Series.Info","content":"Series.Info \nInfo \n Get the information for an economic data series.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Observations","title":"Series.Observations","content":"Series.Observations \nObservations \n Get the observations or data values for an economic data series.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Release","title":"Series.Release","content":"Series.Release \nRelease \n Get the release for an economic data series.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Search","title":"Series.Search","content":"Series.Search \nSearch \n Get economic data series that match search text.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Tags","title":"Series.Tags","content":"Series.Tags \nTags \n Get the FRED tags for a series.","headings":[],"type":"apiDocs"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/index.html","title":"F# Data FRED\n","content":"\u0026emsp;\n\u0026emsp;\n\nF# Data FRED\nF# Data FRED is a library for\nFRED database data access\nbased on FSharp.Data.\nShort for Federal Reserve Economic Data, FRED is an online database consisting\nof hundreds of thousands of economic data time series from scores of national,\ninternational, public, and private sources.\nThis library uses the FRED API to access the data.\nYou can use FSharp.Data.Fred in dotnet interactive\nnotebooks in Visual Studio Code\nor Jupyter, or in F# scripts (.fsx files),\nby referencing the package as follows:\n#r \u0026quot;nuget: FSharp.Data.Fred, 0.2.1\u0026quot;   \n#r \u0026quot;nuget: FSharp.Data\u0026quot; //Also load FSharp.Data\n\nopen FSharp.Data\nopen FSharp.Data.Fred\nopen System //Usefull to access DateTime\n\nF# Data FRED\nFirst in order to use the methods you\u0027ll need to create a value with type Fred.\nFred receives an API key as a parameter (string). Get your FRED API key.\nExample:\nlet apiKey = \u0022insert API key here\u0022\nNow you can use the created value myFred to access all the methods in the FRED library.\nFRED.Series Module Functions:\n\nSearch.\nInfo.\nCategories.\nRelease.\nTags.\nObservations.\n\nF# Data FRED: Series.Search\nA collection of economic data series that match the parameters.\nThe parameters are the following:\n\n\nsearchText, required.\nThe words to match against economic data series.\n\n\nsearchType, optional. Default is SearchType.FullText.\nDetermines the type of search to perform.\nOne of the following: SearchType.FullText or SearchType.SeriesId.\n\n\nSearchType.FullText searches series attributes title, units, frequency, and tags by parsing words into stems. \nThis makes it possible for searches like \u0027Industry\u0027 to match series containing related words such as \u0027Industries\u0027.\nOf course, you can search for multiple words like \u0027money\u0027 and \u0027stock\u0027. Remember to url encode spaces (e.g. \u0027money%20stock\u0027).\n\n\nSearchType.SeriesId performs a substring search on series IDs. Searching for \u0027ex\u0027 will find series containing \u0027ex\u0027 anywhere in a series ID.\n\u0027\u0027 can be used to anchor searches and match 0 or more of any character. Searching for \u0027ex\u0027 will find series containing \u0027ex\u0027 at the beginning of a series ID.\nSearching for \u0027ex\u0027 will find series containing \u0027ex\u0027 at the end of a series ID. It\u0027s also possible to put an \u0027\u0027 in the middle of a string.\n\u0027m*sl\u0027 finds any series starting with \u0027m\u0027 and ending with \u0027sl\u0027.\n\n\n\n\nrealtimeStart, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nrealtimeEnd, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nlimit, optional. Default: 1000.\nThe maximum number of results to return.\ninteger between 1 and 1000.\n\n\norderBy, optional. Default: If the value of searchType is SearchType.FullText then the default value of orderBy is SearchOrder.SearchRank. If the value of searchType is SearchType.SeriesId then the default value of orderBy is SearchOrder.SeriesId.\nOrder results by values of the specified attribute.\nOne of the following:\nSearchOrder.SearchRank SearchOrder.SeriesIdOrder SearchOrder.Title SearchOrder.Units SearchOrder.Frequency SearchOrder.SeasonalAdjustment\nSearchOrder.RealTimeStart SearchOrder.RealTimeEnd SearchOrder.LastUpdated SearchOrder.ObservationStart SearchOrder.ObservationEnd SearchOrder.Popularity SearchOrder.GroupPopularity\n\n\nsortOrder, optional. Default: If orderBy is equal to SearchOrder.SearchRank or SearchOrder.Popularity, then the default value of sortOrder is SortOrder.Descending. Otherwise, the default sortOrder is SortOrder.Ascending.\nSort results is ascending or descending order for attribute values specified by orderBy.\n\n\nExamples:\nSearch for \u002210-Year\u0022 text without specifying any optional parameters.\nmyFred.Series.Search(\u0026quot;10-Year\u0026quot;).Summary()\n\nCount of search hits: 10590\nTop 10 results:\n  1. 10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity \n         Id: T10Y2Y     Period: 1976-06-01 to 2023-11-09  Freq: Daily \n\n  2. 10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity \n         Id: T10Y2YM    Period: 1976-06-01 to 2023-10-01  Freq: Monthly \n\n  3. 10-Year Treasury Constant Maturity Minus 3-Month Treasury Constant Maturity \n         Id: T10Y3M     Period: 1982-01-04 to 2023-11-09  Freq: Daily \n\n  4. Market Yield on U.S. Treasury Securities at 10-Year Constant Maturity, Quoted on an Investment Basis \n         Id: DGS10      Period: 1962-01-02 to 2023-11-08  Freq: Daily \n\n  5. Market Yield on U.S. Treasury Securities at 10-Year Constant Maturity, Quoted on an Investment Basis \n         Id: GS10       Period: 1953-04-01 to 2023-10-01  Freq: Monthly \n\n  6. 10-Year Treasury Constant Maturity Minus 3-Month Treasury Constant Maturity \n         Id: T10Y3MM    Period: 1982-01-01 to 2023-10-01  Freq: Monthly \n\n  7. Market Yield on U.S. Treasury Securities at 10-Year Constant Maturity, Quoted on an Investment Basis \n         Id: WGS10YR    Period: 1962-01-05 to 2023-11-03  Freq: Weekly, Ending Friday \n\n  8. Market Yield on U.S. Treasury Securities at 10-Year Constant Maturity, Quoted on an Investment Basis \n         Id: RIFLGFCY10NA Period: 1962-01-01 to 2022-01-01  Freq: Annual \n\n  9. 10-Year Breakeven Inflation Rate \n         Id: T10YIE     Period: 2003-01-02 to 2023-11-09  Freq: Daily \n\n 10. 10-Year Breakeven Inflation Rate \n         Id: T10YIEM    Period: 2003-01-01 to 2023-10-01  Freq: Monthly\nSearch for \u002210-Year\u0022 text specifying some optional parameters.\nmyFred.Series.Search(\u0026quot;10-Year\u0026quot;, \n                     searchType = SearchType.FullText, \n                     limit = 3, \n                     orderBy = SearchOrder.GroupPopularity, \n                     sortOrder = SortOrder.Descending).Summary()\n\nCount of search hits: 10590\nTop 3 results:\n  1. 10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity \n         Id: T10Y2Y     Period: 1976-06-01 to 2023-11-09  Freq: Daily \n\n  2. 10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity \n         Id: T10Y2YM    Period: 1976-06-01 to 2023-10-01  Freq: Monthly \n\n  3. 10-Year Treasury Constant Maturity Minus 3-Month Treasury Constant Maturity \n         Id: T10Y3M     Period: 1982-01-04 to 2023-11-09  Freq: Daily\nSearch for \u0022Hello World\u0022 text that should not match any series.\nmyFred.Series.Search(\u0026quot;Hello World\u0026quot;).Summary()\n\nCount of search hits: 0\nTop 0 results:\nF# Data FRED: Series.Info\nGet the information for an economic data series.\nThis method only asks for the series id as a parameter (string)\nExamples:\nGet the information for series id = \u0022GS10\u0022\nmyFred.Series.Info \u0026quot;GS10\u0026quot;\n\nval it: JsonProvider\u0026lt;...\u0026gt;.InfoResponse =\n  {\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022seriess\u0022: [\n    {\n      \u0022id\u0022: \u0022GS10\u0022,\n      \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n      \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n      \u0022title\u0022: \u0022Market Yield on U.S. Treasury Securities at 10-Year Constant Maturity, Quoted on an Investment Basis\u0022,\n      \u0022observation_start\u0022: \u00221953-04-01\u0022,\n      \u0022observation_end\u0022: \u00222023-10-01\u0022,\n      \u0022frequency\u0022: \u0022Monthly\u0022,\n      \u0022frequency_short\u0022: \u0022M\u0022,\n      \u0022units\u0022: \u0022Percent\u0022,\n      \u0022units_short\u0022: \u0022%\u0022,\n      \u0022seasonal...\nF# Data FRED: Series.Categories\nGet the categories for an economic data series.\nThe parameters are the following:\n\n\nid, required.\nThe id for a series (string).\n\n\nrealtimeStart, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nrealtimeEnd, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nExamples:\nGet the category information for series id = \u0022GS10\u0022\nmyFred.Series.Categories \u0026quot;GS10\u0026quot;\n\nval it: JsonProvider\u0026lt;...\u0026gt;.CategoriesResponse =\n  {\n  \u0022categories\u0022: [\n    {\n      \u0022id\u0022: 115,\n      \u0022name\u0022: \u0022Treasury Constant Maturity\u0022,\n      \u0022parent_id\u0022: 22\n    }\n  ]\n}\nYou can also access the category fields with Array.map:\nmyFred.Series.Categories(\u0026quot;GS10\u0026quot;).Categories\n|\u0026gt; Array.map(fun x -\u0026gt; x.Name)\n\nval it: string array = [|\u0022Treasury Constant Maturity\u0022|]\nF# Data FRED: Series.Release\nGet the release for an economic data series.\nThe parameters are the following:\n\n\nid, required.\nThe id for a series (string).\n\n\nrealtimeStart, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nrealtimeEnd, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nExamples:\nGet the release information for series id = \u0022GS10\u0022\nmyFred.Series.Release \u0026quot;GS10\u0026quot;\n\nval it: JsonProvider\u0026lt;...\u0026gt;.ReleaseResponse =\n  {\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022releases\u0022: [\n    {\n      \u0022id\u0022: 18,\n      \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n      \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n      \u0022name\u0022: \u0022H.15 Selected Interest Rates\u0022,\n      \u0022press_release\u0022: true,\n      \u0022link\u0022: \u0022http://www.federalreserve.gov/releases/h15/\u0022\n    }\n  ]\n}\nF# Data FRED: Series.Tags\nGet the FRED tags for a series.\nThe parameters are the following:\n\n\nid, required.\nThe id for a series (string).\n\n\nrealtimeStart, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nrealtimeEnd, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\norderBy, optional. Default: OrderByTags.SeriesCount.\nOrder results by values of the specified attribute.\nOne of the following:\nOrderByTags.SeriesCount, OrderByTags.Popularity, OrderByTags.Created, OrderByTags.Name, OrderByTags.GroupId.\n\n\nsortOrder, optional. Default: SortOrder.Ascending.\nSort results is ascending or descending order for attribute values specified by orderBy.\n\n\nExamples:\nGet the first 3 tags information for series id = \u0022GS10\u0022 without specifying any optional parameters.\nmyFred.Series.Tags(\u0026quot;GS10\u0026quot;).Tags\n|\u0026gt; Array.truncate 3 \n\nval it: JsonProvider\u0026lt;...\u0026gt;.Tag array =\n  [|{\n  \u0022name\u0022: \u0022h15\u0022,\n  \u0022group_id\u0022: \u0022rls\u0022,\n  \u0022notes\u0022: \u0022H.15 Selected Interest Rates\u0022,\n  \u0022created\u0022: \u00222012-08-16 15:21:17-05\u0022,\n  \u0022popularity\u0022: 56,\n  \u0022series_count\u0022: 270\n};\n    {\n  \u0022name\u0022: \u002210-year\u0022,\n  \u0022group_id\u0022: \u0022gen\u0022,\n  \u0022notes\u0022: \u0022\u0022,\n  \u0022created\u0022: \u00222012-02-27 10:18:19-06\u0022,\n  \u0022popularity\u0022: 53,\n  \u0022series_count\u0022: 288\n};\n    {\n  \u0022name\u0022: \u0022interest rate\u0022,\n  \u0022group_id\u0022: \u0022gen\u0022,\n  \u0022notes\u0022: \u0022\u0022,\n  \u0022created\u0022: \u00222012-05-29 10:14:19-05\u0022,\n  \u0022popularity\u0022: 70,\n  \u0022series_count\u0022: 1596\n}|]\nGet the first 3 tags information for series id = \u0022GS10\u0022 specifying some optional parameters.\nmyFred.Series.Tags(\u0026quot;GS10\u0026quot;, orderBy = OrderByTags.Popularity, sortOrder = SortOrder.Descending).Tags\n|\u0026gt; Array.truncate 3 \n\nval it: JsonProvider\u0026lt;...\u0026gt;.Tag array =\n  [|{\n  \u0022name\u0022: \u0022h15\u0022,\n  \u0022group_id\u0022: \u0022rls\u0022,\n  \u0022notes\u0022: \u0022H.15 Selected Interest Rates\u0022,\n  \u0022created\u0022: \u00222012-08-16 15:21:17-05\u0022,\n  \u0022popularity\u0022: 56,\n  \u0022series_count\u0022: 270\n};\n    {\n  \u0022name\u0022: \u002210-year\u0022,\n  \u0022group_id\u0022: \u0022gen\u0022,\n  \u0022notes\u0022: \u0022\u0022,\n  \u0022created\u0022: \u00222012-02-27 10:18:19-06\u0022,\n  \u0022popularity\u0022: 53,\n  \u0022series_count\u0022: 288\n};\n    {\n  \u0022name\u0022: \u0022interest rate\u0022,\n  \u0022group_id\u0022: \u0022gen\u0022,\n  \u0022notes\u0022: \u0022\u0022,\n  \u0022created\u0022: \u00222012-05-29 10:14:19-05\u0022,\n  \u0022popularity\u0022: 70,\n  \u0022series_count\u0022: 1596\n}|]\nF# Data FRED: Series.Observations\nGet the observations or data values for an economic data series.\nThe parameters are the following:\n\n\nid, required.\nThe id for a series (string).\n\n\nrealtimeStart, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nrealtimeEnd, optional. Default: today\u0027s date.\nThe start of the real-time period. For more information, see Real-Time Periods.\n\n\nlimit, optional. Default: 1000.\nThe maximum number of results to return.\ninteger between 1 and 1000.\n\n\nsortOrder, optional. Default: SortOrder.Ascending.\nSort results is ascending or descending observation date order.\n\n\nobservationStart, optional. Default: DateTime(1776,07,04) (earliest available).\nThe start of the observation period. DateTime(yyyy,MM,dd) formatted DateTime.\n\n\nobservationEnd, optional. Default: today\u0027s date.   DateTime(9999,12,31) (latest available).\nThe end of the observation period. DateTime(yyyy,MM,dd) formatted DateTime.\n\n\nunits, optional. Default: Units.Levels (No transformation).\nA key that indicates a data value transformation.\nOne of the following:\nUnits.Levels\nUnits.Change\nUnits.ChangefromYearAgo\nUnits.PercentChange\nUnits.PercentChangefromYearAgo\nUnits.CompoundedAnnualRateofChange\nUnits.ContinuouslyCompoundedRateofChange\nUnits.ContinuouslyCompoundedAnnualRateofChange\nUnits.NaturalLog.\nUnit transformation formulas\n\n\nfrequency, optional.\nAn optional parameter that indicates a lower frequency to aggregate values to.\nThe FRED frequency aggregation feature converts higher frequency data series into lower frequency\ndata series (e.g. converts a monthly data series into an annual data series).\nIn FRED, the highest frequency data is daily, and the lowest frequency data is annual.\nThere are 3 aggregation methods available- average, sum, and end of period.\nSee the aggregation_method parameter.\nOne of the following:\nFrequency.Daily, Frequency.Weekly, Frequency.Biweekly, Frequency.Monthly, Frequency.Quarterly,\nFrequency.Semiannual, Frequency.Annual, Frequency.WeeklyEndingFriday,\nFrequency.WeeklyEndingThursday, Frequency.WeeklyEndingWednesday, Frequency.WeeklyEndingTuesday,\nFrequency.WeeklyEndingMonday, Frequency.WeeklyEndingSunday, Frequency.WeeklyEndingSaturday,\nFrequency.BiweeklyEndingWednesday, Frequency.BiweeklyEndingMonday.\n\n\naggMethod, optional. Default: AggMethod.Average.\nA key that indicates the aggregation method used for frequency aggregation.\nThis parameter has no affect if the frequency parameter is not set.\nOne of the following:\nAggMethod.Average, AggMethod.Sum, AggMethod.EndOfPeriod.\n\n\nExamples:\nGet the observations for \u0022GS10\u0022 series without specifying any optional parameters.\nmyFred.Series.Observations(\u0026quot;GS10\u0026quot;).Observations\n|\u0026gt; Seq.truncate 3 \n\nval it: JsonProvider\u0026lt;...\u0026gt;.Observation seq =\n  seq\n    [{\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022date\u0022: \u00221953-04-01\u0022,\n  \u0022value\u0022: \u00222.83\u0022\n};\n     {\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022date\u0022: \u00221953-05-01\u0022,\n  \u0022value\u0022: \u00223.05\u0022\n};\n     {\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022date\u0022: \u00221953-06-01\u0022,\n  \u0022value\u0022: \u00223.11\u0022\n}]\nGet the observations for \u0022DTP10J25\u0022 with a semi-annual frequency.\nmyFred.Series.Observations(\u0026quot;DTP10J25\u0026quot;, frequency = Frequency.Semiannual).Observations\n|\u0026gt; Seq.truncate 3 \n\nval it: JsonProvider\u0026lt;...\u0026gt;.Observation seq =\n  seq\n    [{\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022date\u0022: \u00222015-01-01\u0022,\n  \u0022value\u0022: \u0022.\u0022\n};\n     {\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022date\u0022: \u00222015-07-01\u0022,\n  \u0022value\u0022: \u00220.624\u0022\n};\n     {\n  \u0022realtime_start\u0022: \u00222023-11-13\u0022,\n  \u0022realtime_end\u0022: \u00222023-11-13\u0022,\n  \u0022date\u0022: \u00222016-01-01\u0022,\n  \u0022value\u0022: \u00220.315\u0022\n}]\n","headings":["F# Data FRED","F# Data FRED","FRED.Series Module Functions:","F# Data FRED: Series.Search","F# Data FRED: Series.Info","F# Data FRED: Series.Categories","F# Data FRED: Series.Release","F# Data FRED: Series.Tags","F# Data FRED: Series.Observations"],"type":"content"}]